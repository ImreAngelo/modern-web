# Map .avif or .webp to $suffix if supported by browser
map $http_accept $suffix {
	default "";
	"~*avif" ".avif";
	"~*webp" ".webp";
}

# Serve static content
server {
	# IPv4
	listen 443 quic reuseport;
	listen 443 ssl;

	# IPv6
	listen [::]:443 quic reuseport;
	listen [::]:443 ssl;

	ssl_certificate 		certs/localhost.com.crt;
	ssl_certificate_key 	certs/localhost.com.key;

    # Domain
    server_name www.localhost localhost;

	# QUIC
	quic_retry on;
	ssl_early_data on;
	quic_gso on;

	# HTTP version
	http3 on;
	http2 on;
	
	# Client caching
	add_header Cache-Control "public";
	expires 1y;

	# Gzip compression
	# gzip on;
    # gzip_comp_level 9;
    gzip_static on;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied any;
    gzip_vary on;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;

	# Brotli compression
	# brotli on;
	# brotli_comp_level 11;
	brotli_static on;
	brotli_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

	# Hide server info
    server_tokens       on;
    autoindex           off;

	# QUIC
	add_header Alt-Svc 'h3=":443"; ma=86400';

    # Root
    root /etc/nginx/data;
    
	# Error page
	error_page 404 /404.html;
	error_page 500 501 502 /500.html;

	# Transparently serve webp/avif files if they exist
    location ~* \.(png|jpe?g) {
		rewrite ^/_next/static/(.*) /$1 break;
        try_files $uri$suffix $uri =404;
    }
	
	# Serve content
	location / {
		rewrite ^/_next/static/(.*) /$1 break;
	    index index.html;
	}
}